/** Contact Rich Cariddi for questions: rcariddi@gmail.com 
* You need to add the custom command to collection - 'sh int counters' 
* @intent Show int counters on Arista & IOS-XE Switches 
* @description 
* 1. Check to see what switch ports have had no traffic accross the wire for sizing and planning. 
* 2. Match on platform.os
* 3. Use the information from the custom command 'show int counters'.
* 4. Get port Status and Name
**/

//  Pattern of output
// Arista & Cisco Same Columns
Traffic =
  ```
{Port:string} {InOctets:number} {InUcastPkts:number} {InMcastPkts:number} {InBcastPkts:number}
```;
EOS_Stats = 
foreach device in network.devices
where device.platform.os == OS.ARISTA_EOS
foreach command in device.outputs.commands
where command.commandText == "sh int counters" // This is causing duplicates -> should be executed after: term length 0
let parsed = parseConfigBlocks(OS.ARISTA_EOS, command.response)
let matchData = blockMatches_alpha1(parsed, Traffic)
foreach iface in device.interfaces
// get 1 match per interface
let x = max(foreach y in matchData
               where iface.name == toLowerCase(y.data.Port)
               select y)
where isPresent(x)
select {
  name: device.name,
  Vendor: device.platform.vendor,
  Model: device.platform.model,
  OS: device.platform.os,
  Tag: device.tagNames,
  Port: iface.name,
  OperStatus: iface.operStatus,
  Description: iface.description,
  InOctets: x.data.InOctets,
  InUcastPkts: x.data.InUcastPkts,
  InMcastPkts: x.data.InMcastPkts,
  InBcastPkts: x.data.InBcastPkts
};

Cisco_Stats = 
foreach device in network.devices
where device.platform.vendor == Vendor.CISCO
foreach command in device.outputs.commands
where command.commandText == "sh int counters" // This is causing duplicates -> should be executed after: term length 0
let parsed = parseConfigBlocks(OS.ARISTA_EOS, command.response)
let matchData = blockMatches_alpha1(parsed, Traffic)
foreach iface in device.interfaces
// get 1 match per interface
let x = max(foreach y in matchData
               where iface.name == toLowerCase(y.data.Port)
               select y)

where isPresent(x)

select {
  name: device.name,
  Vendor: device.platform.vendor,
  Model: device.platform.model,
  OS: device.platform.os,
  Tag: device.tagNames,
  Port: iface.name,
  OperStatus: iface.operStatus,
  Description: iface.description,
  InOctets: x.data.InOctets,
  InUcastPkts: x.data.InUcastPkts,
  InMcastPkts: x.data.InMcastPkts,
  InBcastPkts: x.data.InBcastPkts
};

ifaceStats = EOS_Stats + Cisco_Stats;
// ifaceStats = Cisco_Stats;

foreach result in ifaceStats
// foreach result in Cisco_Stats
select {
  Hostname: result.name,
  Vendor: result.Vendor,
  Model: result.Model,
  OS: result.OS,
  Tag: result.Tag,
  OperStatus: result.OperStatus,
  Desc: result.Description,
  Port: result.Port,
  InUcastPkts: result.InUcastPkts,
  InMcastPkts: result.InMcastPkts,
  InBcastPkts: result.InBcastPkts
}
